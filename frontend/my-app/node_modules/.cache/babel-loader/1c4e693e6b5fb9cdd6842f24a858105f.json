{"ast":null,"code":"import _classCallCheck from \"/app/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/app/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/app/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/app/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/app/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/app/react/src/videoUpload.js\";\nimport React, { Component, useState, ChangeEvent } from 'react';\nvar Upload = /*#__PURE__*/function (_Component) {\n  _inherits(Upload, _Component);\n  function Upload(props) {\n    var _this;\n    _classCallCheck(this, Upload);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Upload).call(this, props));\n    _this.clickUpload = function () {\n      var fetchFormLogin = document.querySelector('.fetchFormUpload');\n      var url = 'http://localhost:8000/videoUpload';\n      var formData = new FormData(fetchFormLogin);\n      // ðŸ‘‡ Uploading the file using the fetch API to the server\n      fetch(url, {\n        method: 'POST',\n        body: formData\n        // ðŸ‘‡ Set headers manually for single file upload\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        return console.log(data);\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n    _this.state = {};\n    return _this;\n  }\n  _createClass(Upload, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"fetchFormUpload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        m: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, \"\\u52D5\\u753B\\u3092\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\")), /*#__PURE__*/React.createElement(Box, {\n        m: 1,\n        p: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }\n      }, \"\\u52D5\\u753B:\"), /*#__PURE__*/React.createElement(TextField, {\n        name: \"video\",\n        type: \"file\",\n        placeholder: \"\",\n        onChange: this.handleChange,\n        value: this.state.nameLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Box, {\n        m: 1,\n        p: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }\n      }, \"title\"), /*#__PURE__*/React.createElement(TextField, {\n        name: \"title\",\n        type: \"text\",\n        placeholder: \"\\u30BF\\u30A4\\u30C8\\u30EB\\u3092\\u5165\\u529B\",\n        onChange: this.handleChange,\n        value: this.state.passwordLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Box, {\n        m: 1,\n        p: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.clickUpload,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, \"Login\"))));\n    }\n  }]);\n  return Upload;\n}(Component);\nexport { Upload as default };","map":{"version":3,"names":["React","Component","useState","ChangeEvent","Upload","props","clickUpload","fetchFormLogin","document","querySelector","url","formData","FormData","fetch","method","body","then","res","json","data","console","log","catch","err","error","state","handleChange","nameLogin","passwordLogin"],"sources":["/app/react/src/videoUpload.js"],"sourcesContent":["import React, { Component, useState,ChangeEvent  } from 'react';\nexport default class Upload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n      }\n      \n\n   clickUpload = () => {\n    const fetchFormLogin = document.querySelector('.fetchFormUpload');\n    const url = 'http://localhost:8000/videoUpload';\n    let formData = new FormData(fetchFormLogin);\n    // ðŸ‘‡ Uploading the file using the fetch API to the server\n    fetch(url, {\n      method: 'POST',\n      body:  formData,\n      // ðŸ‘‡ Set headers manually for single file upload\n\n    })\n      .then((res) => res.json())\n      .then((data) => console.log(data))\n      .catch((err) => console.error(err));\n  };\n    render() {\n\n        return (\n            <Container>\n            <form className=\"fetchFormUpload\">\n              <Box m={1}>\n                <h2>å‹•ç”»ã‚’ã‚¢ãƒƒãƒ—ãƒ­ãƒ¼ãƒ‰</h2>\n              </Box>\n              <Box m={1} p={1}>\n                <FormControl>\n                  <FormLabel>å‹•ç”»:</FormLabel>\n                  <TextField\n                    name=\"video\"\n                    type=\"file\"\n                    placeholder=\"\"\n                    onChange={this.handleChange}\n                    value={this.state.nameLogin}\n                  />\n                </FormControl>\n              </Box>\n              <Box m={1} p={1}>\n                <FormControl>\n                  <FormLabel>title</FormLabel>\n                  <TextField\n                    name=\"title\"\n                    type=\"text\"\n                    placeholder=\"ã‚¿ã‚¤ãƒˆãƒ«ã‚’å…¥åŠ›\"\n                    onChange={this.handleChange}\n                    value={this.state.passwordLogin}\n                  />\n                </FormControl>\n              </Box>\n              <Box m={1} p={1}>\n                <Button type=\"button\" variant=\"contained\" color=\"primary\" onClick={this.clickUpload}>\n                Login\n                </Button>\n              </Box>\n            </form>\n            </Container>\n        )\n      }\n  }\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAACC,WAAW,QAAS,OAAO;AAAC,IAC3CC,MAAM;EAAA;EACvB,gBAAYC,KAAK,EAAE;IAAA;IAAA;IACf,4EAAMA,KAAK;IAAE,MAMlBC,WAAW,GAAG,YAAM;MACnB,IAAMC,cAAc,GAAGC,QAAQ,CAACC,aAAa,CAAC,kBAAkB,CAAC;MACjE,IAAMC,GAAG,GAAG,mCAAmC;MAC/C,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,CAACL,cAAc,CAAC;MAC3C;MACAM,KAAK,CAACH,GAAG,EAAE;QACTI,MAAM,EAAE,MAAM;QACdC,IAAI,EAAGJ;QACP;MAEF,CAAC,CAAC,CACCK,IAAI,CAAC,UAACC,GAAG;QAAA,OAAKA,GAAG,CAACC,IAAI,EAAE;MAAA,EAAC,CACzBF,IAAI,CAAC,UAACG,IAAI;QAAA,OAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAAA,EAAC,CACjCG,KAAK,CAAC,UAACC,GAAG;QAAA,OAAKH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;MAAA,EAAC;IACvC,CAAC;IAnBK,MAAKE,KAAK,GAAG,CACb,CAAC;IAAC;EACJ;EAAC;IAAA;IAAA,yBAkBM;MAEL,oBACI,oBAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACV;QAAM,SAAS,EAAC,iBAAiB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC/B,oBAAC,GAAG;QAAC,CAAC,EAAE,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACR;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAI,wDAAS,CAAK,CACd,eACN,oBAAC,GAAG;QAAC,CAAC,EAAE,CAAE;QAAC,CAAC,EAAE,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACd,oBAAC,WAAW;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACV,oBAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAC,eAAG,CAAY,eAC1B,oBAAC,SAAS;QACR,IAAI,EAAC,OAAO;QACZ,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,EAAE;QACd,QAAQ,EAAE,IAAI,CAACC,YAAa;QAC5B,KAAK,EAAE,IAAI,CAACD,KAAK,CAACE,SAAU;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAC5B,CACU,CACV,eACN,oBAAC,GAAG;QAAC,CAAC,EAAE,CAAE;QAAC,CAAC,EAAE,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACd,oBAAC,WAAW;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACV,oBAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAC,OAAK,CAAY,eAC5B,oBAAC,SAAS;QACR,IAAI,EAAC,OAAO;QACZ,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,4CAAS;QACrB,QAAQ,EAAE,IAAI,CAACD,YAAa;QAC5B,KAAK,EAAE,IAAI,CAACD,KAAK,CAACG,aAAc;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAChC,CACU,CACV,eACN,oBAAC,GAAG;QAAC,CAAC,EAAE,CAAE;QAAC,CAAC,EAAE,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACd,oBAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAC,WAAW;QAAC,KAAK,EAAC,SAAS;QAAC,OAAO,EAAE,IAAI,CAACtB,WAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAC,OAErF,CAAS,CACL,CACD,CACK;IAElB;EAAC;EAAA;AAAA,EA/D6BL,SAAS;AAAA,SAAxBG,MAAM"},"metadata":{},"sourceType":"module"}