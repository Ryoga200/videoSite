{"ast":null,"code":"import _classCallCheck from \"/app/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/app/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/app/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/app/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/app/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/app/react/src/videoUpload.js\";\nimport React, { Component, useState, ChangeEvent } from 'react';\nvar Upload = /*#__PURE__*/function (_Component) {\n  _inherits(Upload, _Component);\n  function Upload(props) {\n    var _this;\n    _classCallCheck(this, Upload);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Upload).call(this, props));\n    _this.handleFileChange = function (e) {\n      if (e.target.files) {\n        setFile(e.target.files[0]);\n      }\n    };\n    _this.handleUploadClick = function () {\n      if (!file) {\n        return;\n      }\n\n      // ðŸ‘‡ Uploading the file using the fetch API to the server\n      fetch('https://httpbin.org/post', {\n        method: 'POST',\n        body: file,\n        // ðŸ‘‡ Set headers manually for single file upload\n        headers: {\n          'content-type': file.type,\n          'content-length': \"\".concat(file.size) // ðŸ‘ˆ Headers need to be a string\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        return console.log(data);\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n    _this.state = {\n      file: \"\"\n    };\n    return _this;\n  }\n  _createClass(Upload, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: handleUploadClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, \"Upload\"));\n    }\n  }]);\n  return Upload;\n}(Component);\nexport { Upload as default };","map":{"version":3,"names":["React","Component","useState","ChangeEvent","Upload","props","handleFileChange","e","target","files","setFile","handleUploadClick","file","fetch","method","body","headers","type","size","then","res","json","data","console","log","catch","err","error","state"],"sources":["/app/react/src/videoUpload.js"],"sourcesContent":["import React, { Component, useState,ChangeEvent  } from 'react';\nexport default class Upload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          file:\"\",\n        };\n      }\n      \n         handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n          if (e.target.files) {\n            setFile(e.target.files[0]);\n          }\n        };\n   handleUploadClick = () => {\n    if (!file) {\n      return;\n    }\n\n    // ðŸ‘‡ Uploading the file using the fetch API to the server\n    fetch('https://httpbin.org/post', {\n      method: 'POST',\n      body: file,\n      // ðŸ‘‡ Set headers manually for single file upload\n      headers: {\n        'content-type': file.type,\n        'content-length': `${file.size}`, // ðŸ‘ˆ Headers need to be a string\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => console.log(data))\n      .catch((err) => console.error(err));\n  };\n    render() {\n\n        return (\n            <div>\n      <input type=\"file\" onChange={handleFileChange} />\n\n      <div></div>\n\n      <button onClick={handleUploadClick}>Upload</button>\n    </div>\n        )\n      }\n  }\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAACC,WAAW,QAAS,OAAO;AAAC,IAC3CC,MAAM;EAAA;EACvB,gBAAYC,KAAK,EAAE;IAAA;IAAA;IACf,4EAAMA,KAAK;IAAE,MAMZC,gBAAgB,GAAG,UAACC,CAAgC,EAAK;MACxD,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,EAAE;QAClBC,OAAO,CAACH,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;MAC5B;IACF,CAAC;IAAA,MACNE,iBAAiB,GAAG,YAAM;MACzB,IAAI,CAACC,IAAI,EAAE;QACT;MACF;;MAEA;MACAC,KAAK,CAAC,0BAA0B,EAAE;QAChCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH,IAAI;QACV;QACAI,OAAO,EAAE;UACP,cAAc,EAAEJ,IAAI,CAACK,IAAI;UACzB,gBAAgB,YAAKL,IAAI,CAACM,IAAI,CAAE,CAAE;QACpC;MACF,CAAC,CAAC,CACCC,IAAI,CAAC,UAACC,GAAG;QAAA,OAAKA,GAAG,CAACC,IAAI,EAAE;MAAA,EAAC,CACzBF,IAAI,CAAC,UAACG,IAAI;QAAA,OAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAAA,EAAC,CACjCG,KAAK,CAAC,UAACC,GAAG;QAAA,OAAKH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;MAAA,EAAC;IACvC,CAAC;IA5BK,MAAKE,KAAK,GAAG;MACXhB,IAAI,EAAC;IACP,CAAC;IAAC;EACJ;EAAC;IAAA;IAAA,yBA0BM;MAEL,oBACI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACN;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEN,gBAAiB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,eAEjD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAW,eAEX;QAAQ,OAAO,EAAEK,iBAAkB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAC,QAAM,CAAS,CAC/C;IAEJ;EAAC;EAAA;AAAA,EA3C6BV,SAAS;AAAA,SAAxBG,MAAM"},"metadata":{},"sourceType":"module"}